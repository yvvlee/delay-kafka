// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/yvvlee/delay-kafka/internal/config"
	"github.com/yvvlee/delay-kafka/internal/core"
)

// Injectors from wire.go:

func wireApp() (*core.App, func(), error) {
	configConfig := config.NewConfig()
	logger, cleanup, err := core.NewLogger()
	if err != nil {
		return nil, nil, err
	}
	writer, cleanup2 := core.NewKafkaWriter(configConfig, logger)
	taskServer, err := core.NewTaskServer(configConfig, logger, writer)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	reader, cleanup3 := core.NewKafkaReader(configConfig, logger)
	client, cleanup4 := core.NewTaskClient(configConfig, logger)
	consumer := core.NewConsumer(logger, reader, writer, client)
	app := core.NewApp(taskServer, consumer)
	return app, func() {
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
